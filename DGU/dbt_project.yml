
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'DGU'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'DGU'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  DGU:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: view

    # Configuração da camada staging
    staging:
      +materialized: view
      +schema: staging

    # Configuração da camada mart
    mart:
      +materialized: table
      +schema: mart

# Configuração dos seeds
seeds:
  DGU:
    # Configurações para tabelas de estatísticas
    palmeiras_tabela_0:
      +column_types:
        age: integer
        mp: integer
        starts: integer
        min: integer
        gls: integer
        ast: integer
        g_a: integer
        g_pk: integer
        pk: integer
        pkatt: integer
        crdy: integer
        crdr: integer
        prgc: integer
        prgp: integer
        prgr: integer
        90s: float64
        xg: float64
        npxg: float64
        xag: float64
        npxg_xag: float64
        data_extracao: timestamp

    flamengo_tabela_0:
      +column_types:
        age: integer
        mp: integer
        starts: integer
        min: integer
        gls: integer
        ast: integer
        g_a: integer
        g_pk: integer
        pk: integer
        pkatt: integer
        crdy: integer
        crdr: integer
        prgc: integer
        prgp: integer
        prgr: integer
        90s: float64
        xg: float64
        npxg: float64
        xag: float64
        npxg_xag: float64
        data_extracao: timestamp

    corinthians_tabela_0:
      +column_types:
        age: integer
        mp: integer
        starts: integer
        min: integer
        gls: integer
        ast: integer
        g_a: integer
        g_pk: integer
        pk: integer
        pkatt: integer
        crdy: integer
        crdr: integer
        prgc: integer
        prgp: integer
        prgr: integer
        90s: float64
        xg: float64
        npxg: float64
        xag: float64
        npxg_xag: float64
        data_extracao: timestamp

    # Configurações para tabelas de valor de mercado
    palmeiras_tabela_0_mercado:
      +column_types:
        age: integer
        market_value_eur: integer
        data_extracao: timestamp

    flamengo_tabela_0_mercado:
      +column_types:
        age: integer
        market_value_eur: integer
        data_extracao: timestamp

    corinthians_tabela_0_mercado:
      +column_types:
        age: integer
        market_value_eur: integer
        data_extracao: timestamp
